{"ast":null,"code":"// import React from \"react\";\n// // import ChatFeed from \"react-chat-ui\";/\n// import { ChatFeed, ChatBubble, BubbleGroup, Message } from \"react-chat-ui\";\n\n// const styles = {\n//   button: {\n//     backgroundColor: \"#fff\",\n//     borderColor: \"#1D2129\",\n//     borderStyle: \"solid\",\n//     borderRadius: 20,\n//     borderWidth: 2,\n//     color: \"#1D2129\",\n//     fontSize: 18,\n//     fontWeight: \"300\",\n//     paddingTop: 8,\n//     paddingBottom: 8,\n//     paddingLeft: 16,\n//     paddingRight: 16,\n//     outline: \"none\"\n//   },\n//   selected: {\n//     color: \"#fff\",\n//     backgroundColor: \"#0084FF\",\n//     borderColor: \"#0084FF\"\n//   }\n// };\n\n// const users = {\n//   0: \"You\",\n//   Mark: \"Mark\",\n//   2: \"Evan\"\n// };\n\n// const customBubble = props => (\n//   <div>\n//     <p>{`${props.message.senderName} ${props.message.id ? \"says\" : \"said\"}: ${\n//       props.message.message\n//     }`}</p>\n//   </div>\n// );\n\n// class Chat extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       messages: [\n//         new Message({ id: \"Mary\", message: \"Hey guys!\", senderName: \"Mary\" }),\n//         new Message({\n//           id: 2,\n//           message: (\n//             <p>\n//               <span>11:50:</span>Hey! Eve here. react-chat-ui is pretty dooope.\n//             </p>\n//           ),\n//           senderName: \"Eve\"\n//         })\n//       ],\n//       useCustomBubble: false,\n//       curr_user: 0\n//     };\n//   }\n\n//   onPress(user) {\n//     this.setState({ curr_user: user });\n//   }\n\n//   onMessageSubmit(e) {\n//     const input = this.message;\n//     e.preventDefault();\n//     if (!input.value) {\n//       return false;\n//     }\n//     this.pushMessage(this.state.curr_user, input.value);\n//     input.value = \"\";\n//     return true;\n//   }\n\n//   pushMessage(recipient, message) {\n//     const prevState = this.state;\n//     const newMessage = new Message({\n//       id: recipient,\n//       message,\n//       senderName: users[recipient]\n//     });\n//     prevState.messages.push(newMessage);\n//     this.setState(this.state);\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"chatfeed-wrapper\">\n//           <ChatFeed\n//             chatBubble={this.state.useCustomBubble && customBubble}\n//             maxHeight={250}\n//             messages={this.state.messages} // Boolean: list of message objects\n//             showSenderName\n//           />\n\n//           <form onSubmit={e => this.onMessageSubmit(e)}>\n//             <input\n//               ref={m => {\n//                 this.message = m;\n//               }}\n//               placeholder=\"Type a message...\"\n//               className=\"message-input\"\n//             />\n//           </form>\n\n//           <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n//             <button\n//               style={{\n//                 ...styles.button,\n//                 ...(this.state.curr_user === 0 ? styles.selected : {})\n//               }}\n//               onClick={() => this.onPress(0)}\n//             >\n//               You\n//             </button>\n//             <button\n//               style={{\n//                 ...styles.button,\n//                 ...(this.state.curr_user === \"Mary\" ? styles.selected : {})\n//               }}\n//               onClick={() => this.onPress(\"Mary\")}\n//             >\n//               Mary\n//             </button>\n//             <button\n//               style={{\n//                 ...styles.button,\n//                 ...(this.state.curr_user === 2 ? styles.selected : {})\n//               }}\n//               onClick={() => this.onPress(2)}\n//             >\n//               Eve\n//             </button>\n//           </div>\n//           <div\n//             style={{ display: \"flex\", justifyContent: \"center\", marginTop: 10 }}\n//           >\n//             <button\n//               style={{\n//                 ...styles.button,\n//                 ...(this.state.useCustomBubble ? styles.selected : {})\n//               }}\n//               onClick={() =>\n//                 this.setState({ useCustomBubble: !this.state.useCustomBubble })\n//               }\n//             >\n//               Custom Bubbles\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["C:/Users/elain/1112/IUA2/my-app/src/chatroom.js"],"sourcesContent":["// import React from \"react\";\r\n// // import ChatFeed from \"react-chat-ui\";/\r\n// import { ChatFeed, ChatBubble, BubbleGroup, Message } from \"react-chat-ui\";\r\n\r\n// const styles = {\r\n//   button: {\r\n//     backgroundColor: \"#fff\",\r\n//     borderColor: \"#1D2129\",\r\n//     borderStyle: \"solid\",\r\n//     borderRadius: 20,\r\n//     borderWidth: 2,\r\n//     color: \"#1D2129\",\r\n//     fontSize: 18,\r\n//     fontWeight: \"300\",\r\n//     paddingTop: 8,\r\n//     paddingBottom: 8,\r\n//     paddingLeft: 16,\r\n//     paddingRight: 16,\r\n//     outline: \"none\"\r\n//   },\r\n//   selected: {\r\n//     color: \"#fff\",\r\n//     backgroundColor: \"#0084FF\",\r\n//     borderColor: \"#0084FF\"\r\n//   }\r\n// };\r\n\r\n// const users = {\r\n//   0: \"You\",\r\n//   Mark: \"Mark\",\r\n//   2: \"Evan\"\r\n// };\r\n\r\n// const customBubble = props => (\r\n//   <div>\r\n//     <p>{`${props.message.senderName} ${props.message.id ? \"says\" : \"said\"}: ${\r\n//       props.message.message\r\n//     }`}</p>\r\n//   </div>\r\n// );\r\n\r\n// class Chat extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       messages: [\r\n//         new Message({ id: \"Mary\", message: \"Hey guys!\", senderName: \"Mary\" }),\r\n//         new Message({\r\n//           id: 2,\r\n//           message: (\r\n//             <p>\r\n//               <span>11:50:</span>Hey! Eve here. react-chat-ui is pretty dooope.\r\n//             </p>\r\n//           ),\r\n//           senderName: \"Eve\"\r\n//         })\r\n//       ],\r\n//       useCustomBubble: false,\r\n//       curr_user: 0\r\n//     };\r\n//   }\r\n\r\n//   onPress(user) {\r\n//     this.setState({ curr_user: user });\r\n//   }\r\n\r\n//   onMessageSubmit(e) {\r\n//     const input = this.message;\r\n//     e.preventDefault();\r\n//     if (!input.value) {\r\n//       return false;\r\n//     }\r\n//     this.pushMessage(this.state.curr_user, input.value);\r\n//     input.value = \"\";\r\n//     return true;\r\n//   }\r\n\r\n//   pushMessage(recipient, message) {\r\n//     const prevState = this.state;\r\n//     const newMessage = new Message({\r\n//       id: recipient,\r\n//       message,\r\n//       senderName: users[recipient]\r\n//     });\r\n//     prevState.messages.push(newMessage);\r\n//     this.setState(this.state);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <div className=\"chatfeed-wrapper\">\r\n//           <ChatFeed\r\n//             chatBubble={this.state.useCustomBubble && customBubble}\r\n//             maxHeight={250}\r\n//             messages={this.state.messages} // Boolean: list of message objects\r\n//             showSenderName\r\n//           />\r\n\r\n//           <form onSubmit={e => this.onMessageSubmit(e)}>\r\n//             <input\r\n//               ref={m => {\r\n//                 this.message = m;\r\n//               }}\r\n//               placeholder=\"Type a message...\"\r\n//               className=\"message-input\"\r\n//             />\r\n//           </form>\r\n\r\n//           <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n//             <button\r\n//               style={{\r\n//                 ...styles.button,\r\n//                 ...(this.state.curr_user === 0 ? styles.selected : {})\r\n//               }}\r\n//               onClick={() => this.onPress(0)}\r\n//             >\r\n//               You\r\n//             </button>\r\n//             <button\r\n//               style={{\r\n//                 ...styles.button,\r\n//                 ...(this.state.curr_user === \"Mary\" ? styles.selected : {})\r\n//               }}\r\n//               onClick={() => this.onPress(\"Mary\")}\r\n//             >\r\n//               Mary\r\n//             </button>\r\n//             <button\r\n//               style={{\r\n//                 ...styles.button,\r\n//                 ...(this.state.curr_user === 2 ? styles.selected : {})\r\n//               }}\r\n//               onClick={() => this.onPress(2)}\r\n//             >\r\n//               Eve\r\n//             </button>\r\n//           </div>\r\n//           <div\r\n//             style={{ display: \"flex\", justifyContent: \"center\", marginTop: 10 }}\r\n//           >\r\n//             <button\r\n//               style={{\r\n//                 ...styles.button,\r\n//                 ...(this.state.useCustomBubble ? styles.selected : {})\r\n//               }}\r\n//               onClick={() =>\r\n//                 this.setState({ useCustomBubble: !this.state.useCustomBubble })\r\n//               }\r\n//             >\r\n//               Custom Bubbles\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Chat;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}