{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elain\\\\1112\\\\IUA2\\\\my-app\\\\src\\\\moodChatGPT.js\";\nimport './moodChatGPT.css';\nimport React from \"react\";\nimport back from './img/back.png';\nimport { Back } from './components/Style.js';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MoodChatGPT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMessageChange = event => {\n      this.setState({\n        newMessage: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        messages,\n        newMessage\n      } = this.state;\n      if (newMessage.trim() !== '') {\n        const userMessage = {\n          content: newMessage,\n          isSent: true\n        };\n\n        // Update the message list with the user's message\n        const updatedMessages = [...messages, userMessage];\n        this.setState({\n          messages: updatedMessages,\n          newMessage: ''\n        });\n        try {\n          const response = await fetch('/chatGPT/chat', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userMessage)\n          });\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const responseData = await response.json();\n\n          // Replace the last message (the user's message) with the server's response\n          const updatedMessagesWithResponse = [...messages];\n          updatedMessagesWithResponse.pop(); // Remove the last message (the user's message)\n          responseData.isSent = false; // Set isSent to false for received message\n          updatedMessagesWithResponse.push(responseData);\n          this.setState({\n            messages: updatedMessagesWithResponse\n          });\n        } catch (error) {\n          console.error('There was a problem with the fetch operation:', error);\n        }\n      }\n    };\n    this.state = {\n      messages: [],\n      newMessage: ''\n    };\n    this.messageContainerRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      messages\n    } = this.state;\n    const {\n      messages: prevMessages\n    } = prevState;\n\n    // Check if a new message has been added\n    if (messages.length > prevMessages.length) {\n      this.scrollToBottom();\n    }\n  }\n  scrollToBottom() {\n    if (this.messageContainerRef.current) {\n      this.messageContainerRef.current.scrollTop = this.messageContainerRef.current.scrollHeight;\n    }\n  }\n  render() {\n    const {\n      messages,\n      newMessage,\n      isTyping\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/homePage\",\n          children: /*#__PURE__*/_jsxDEV(Back, {\n            src: back,\n            alt: \"\\u56DE\\u4E0A\\u4E00\\u9801\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u5FC3\\u60C5\\u6A39\\u6D1E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          ref: this.messageContainerRef,\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.isSent ? 'sent' : 'received'}`,\n            style: {\n              maxWidth: '70%'\n            },\n            children: message.isSent ? message.content : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"received\",\n              children: isTyping ? '正在輸入中...' : message.choices && message.choices.length > 0 ? message.choices[0].message.content : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enter\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"text\",\n            placeholder: \"\\u8F38\\u5165\\u60F3\\u8AAA\\u7684\\u8A71...\",\n            value: newMessage,\n            onChange: this.handleMessageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MoodChatGPT;","map":{"version":3,"names":["React","back","Back","Link","jsxDEV","_jsxDEV","MoodChatGPT","Component","constructor","props","handleMessageChange","event","setState","newMessage","target","value","handleSubmit","preventDefault","messages","state","trim","userMessage","content","isSent","updatedMessages","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","updatedMessagesWithResponse","pop","push","error","console","messageContainerRef","createRef","componentDidUpdate","prevProps","prevState","prevMessages","length","scrollToBottom","current","scrollTop","scrollHeight","render","isTyping","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","style","maxWidth","choices","type","id","placeholder","onChange","onClick"],"sources":["C:/Users/elain/1112/IUA2/my-app/src/moodChatGPT.js"],"sourcesContent":["import './moodChatGPT.css';\r\nimport React from \"react\";\r\nimport back from './img/back.png';\r\nimport {Back}  from './components/Style.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MoodChatGPT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '',\r\n    };\r\n\r\n    this.messageContainerRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { messages } = this.state;\r\n    const { messages: prevMessages } = prevState;\r\n\r\n    // Check if a new message has been added\r\n    if (messages.length > prevMessages.length) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  scrollToBottom() {\r\n    if (this.messageContainerRef.current) {\r\n      this.messageContainerRef.current.scrollTop = this.messageContainerRef.current.scrollHeight;\r\n    }\r\n  }\r\n\r\n  handleMessageChange = (event) => {\r\n    this.setState({ newMessage: event.target.value });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { messages, newMessage } = this.state;\r\n\r\n    if (newMessage.trim() !== '') {\r\n      const userMessage = {\r\n        content: newMessage,\r\n        isSent: true,\r\n      };\r\n\r\n      // Update the message list with the user's message\r\n      const updatedMessages = [...messages, userMessage];\r\n      this.setState({ messages: updatedMessages, newMessage: '' });\r\n\r\n      try {\r\n        const response = await fetch('/chatGPT/chat', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(userMessage),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const responseData = await response.json();\r\n\r\n        // Replace the last message (the user's message) with the server's response\r\n        const updatedMessagesWithResponse = [...messages];\r\n        updatedMessagesWithResponse.pop(); // Remove the last message (the user's message)\r\n        responseData.isSent = false; // Set isSent to false for received message\r\n        updatedMessagesWithResponse.push(responseData);\r\n\r\n        this.setState({ messages: updatedMessagesWithResponse });\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages, newMessage, isTyping } = this.state;\r\n    \r\n    return (\r\n      <div className=\"Chatroom\">\r\n        <div className=\"chatroom-header\">\r\n          <Link to='/homePage'>\r\n              <Back src={back} alt=\"回上一頁\" />\r\n          </Link>\r\n          <h1>心情樹洞</h1>\r\n        </div>\r\n        <div className=\"chatroom-messages\" >\r\n          <div className=\"message-list\" ref={this.messageContainerRef}>\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`message ${message.isSent ? 'sent' : 'received'}`}\r\n                style={{ maxWidth: '70%' }}\r\n              >\r\n                {message.isSent ? (\r\n                  message.content\r\n                ) : (\r\n                  <div className=\"received\">\r\n                    {isTyping ? '正在輸入中...' : \r\n                      (message.choices && message.choices.length > 0\r\n                        ? message.choices[0].message.content\r\n                        : '')}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n         </div>\r\n       </div>\r\n       <div className=\"chatroom-input\">\r\n         <div className=\"enter\">\r\n           <input\r\n             type=\"text\"\r\n             id=\"text\"\r\n             placeholder='輸入想說的話...'\r\n             value={newMessage}\r\n             onChange={this.handleMessageChange}\r\n           />\r\n           <button type=\"submit\" onClick={this.handleSubmit} >Send</button>\r\n         </div>\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoodChatGPT;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}