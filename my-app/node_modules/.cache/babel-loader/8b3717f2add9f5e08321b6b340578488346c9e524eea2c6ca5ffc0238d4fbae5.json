{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elain\\\\1112\\\\IUA2\\\\my-app\\\\src\\\\chatroom.js\";\nimport './chatroom.css';\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChatRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initializeStompClient = () => {\n      const socket = new SockJS('/chatroom');\n      this.stompClient = Stomp.over(socket);\n      const {\n        userName,\n        apiRoom\n      } = this.state;\n      console.log(\"Initializing WebSocket connection...\" + userName);\n      this.stompClient.connect({\n        user: userName\n      }, frame => {\n        console.log(\"WebSocket connection established:\", frame);\n        this.setState({\n          connected: true\n        });\n        console.log('Connected: ' + frame);\n        //this.stompClient.subscribe(`/topic/${apiRoom}`\n        this.stompClient.subscribe(`/topic/${apiRoom}`, messageOutput => {\n          this.showMessageOutput(JSON.parse(messageOutput.body));\n        });\n        /*\r\n        this.stompClient.subscribe('/user/subscribe', (messageOutput) => {\r\n         this.showMessageOutput(JSON.parse(messageOutput.body));\r\n        });\r\n        */\n      }, error => {\n        console.error(\"WebSocket connection error:\", error);\n      });\n    };\n    this.sendMessage = () => {\n      const {\n        userName,\n        apiRoom,\n        newMessage\n      } = this.state;\n      if (newMessage !== '') {\n        //this.stompClient.send(`/app/${apiRoom}`, {}, JSON.stringify({ from: userName, text: newMessage }));\n        console.log(\"sN\" + userName);\n        this.stompClient.send(`/app/${apiRoom}`, {}, JSON.stringify({\n          from: userName,\n          text: newMessage\n        }));\n        this.setState({\n          newMessage: ''\n        });\n      }\n    };\n    this.showMessageOutput = messageOutput => {\n      console.log(\"Received message:\", messageOutput);\n      if (messageOutput && messageOutput.message && messageOutput.message.text) {\n        const {\n          messages\n        } = this.state;\n        this.state.from = messageOutput.message.from; // 檢查 messageOutput.message.from\n        console.log(\"check\" + this.state.from);\n        const updatedMessages = [...messages, messageOutput.message.text];\n        this.setState({\n          messages: updatedMessages\n        });\n      } else {\n        console.log(\"Invalid message format:\", messageOutput);\n      }\n    };\n    /*\r\n       showMessageOutput = (messageOutput) => {\r\n         const { messages } = this.state;\r\n         const updatedMessages = [...messages, messageOutput.message.text];\r\n    \r\n         this.setState({ messages: updatedMessages });\r\n       };\r\n    */\n    this.handleMessageChange = event => {\n      this.setState({\n        newMessage: event.target.value\n      });\n    };\n    this.state = {\n      messages: [],\n      newMessage: '',\n      from: '',\n      connected: false,\n      userName: localStorage.getItem('userName'),\n      apiRoom: localStorage.getItem('nowRoom'),\n      apiRoomName: localStorage.getItem('nowRoomName')\n    };\n    this.stompClient = null;\n  }\n  componentDidMount() {\n    this.initializeStompClient();\n  }\n  render() {\n    const {\n      messages,\n      newMessage,\n      connected\n    } = this.state;\n    console.log(\"this.state.userName in render:\", this.state.userName);\n    const Message = _ref => {\n      let {\n        content,\n        isSent\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${isSent ? 'sent' : 'received'}`,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.apiRoomName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-online\",\n            children: [this.state.userName, \" is online\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: [/*#__PURE__*/_jsxDEV(Message, {\n            content: \"Hi!\",\n            isSent: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            content: \"\\u55E8\\u55E8\",\n            isSent: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 12\n          }, this), messages.map((message, index) => {\n            console.log(\"message:\", message);\n            console.log(\"from:\", this.state.from);\n            console.log(\"this.state.userName:\", this.state.userName);\n            return /*#__PURE__*/_jsxDEV(Message, {\n              content: message,\n              isSent: this.state.from === this.state.userName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 18\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.messageListRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enter\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"text\",\n            placeholder: \"\\u8F38\\u5165\\u60F3\\u8AAA\\u7684\\u8A71...\",\n            value: newMessage,\n            onChange: this.handleMessageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: this.sendMessage,\n            disabled: !connected,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this);\n  }\n}\nexport default ChatRoom;","map":{"version":3,"names":["React","useParams","SockJS","Stomp","jsxDEV","_jsxDEV","ChatRoom","Component","constructor","props","initializeStompClient","socket","stompClient","over","userName","apiRoom","state","console","log","connect","user","frame","setState","connected","subscribe","messageOutput","showMessageOutput","JSON","parse","body","error","sendMessage","newMessage","send","stringify","from","text","message","messages","updatedMessages","handleMessageChange","event","target","value","localStorage","getItem","apiRoomName","componentDidMount","render","Message","_ref","content","isSent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","messageListRef","type","id","placeholder","onChange","onClick","disabled"],"sources":["C:/Users/elain/1112/IUA2/my-app/src/chatroom.js"],"sourcesContent":["import './chatroom.css';\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\n\r\nclass ChatRoom extends React.Component {\r\n   constructor(props) {\r\n     super(props);\r\n\r\n     this.state = {\r\n       messages: [],\r\n       newMessage: '',\r\n       from:'',\r\n       connected: false,\r\n       userName: localStorage.getItem('userName'),\r\n       apiRoom: localStorage.getItem('nowRoom'),\r\n       apiRoomName: localStorage.getItem('nowRoomName'),\r\n     };\r\n\r\n     this.stompClient = null;\r\n   }\r\n\r\n   componentDidMount() {\r\n     this.initializeStompClient();\r\n   }\r\n\r\n   initializeStompClient = () => {\r\n     const socket = new SockJS('/chatroom');\r\n     this.stompClient = Stomp.over(socket);\r\n\r\n     const { userName, apiRoom } = this.state;\r\n     console.log(\"Initializing WebSocket connection...\"+userName);\r\n     this.stompClient.connect({ user: userName }, (frame) => {\r\n     console.log(\"WebSocket connection established:\", frame);\r\n       this.setState({ connected: true });\r\n       console.log('Connected: ' + frame);\r\n       //this.stompClient.subscribe(`/topic/${apiRoom}`\r\n       this.stompClient.subscribe(`/topic/${apiRoom}`, (messageOutput) => {\r\n         this.showMessageOutput(JSON.parse(messageOutput.body));\r\n       });\r\n        /*\r\n       this.stompClient.subscribe('/user/subscribe', (messageOutput) => {\r\n         this.showMessageOutput(JSON.parse(messageOutput.body));\r\n       });\r\n       */\r\n     }, (error) => {\r\n          console.error(\"WebSocket connection error:\", error);\r\n     });\r\n   };\r\n\r\n   sendMessage = () => {\r\n     const { userName, apiRoom, newMessage } = this.state;\r\n\r\n     if (newMessage !== '') {\r\n       //this.stompClient.send(`/app/${apiRoom}`, {}, JSON.stringify({ from: userName, text: newMessage }));\r\n       console.log(\"sN\"+userName)\r\n       this.stompClient.send(`/app/${apiRoom}`, {}, JSON.stringify({ from: userName, text: newMessage }));\r\n       this.setState({ newMessage: '' });\r\n     }\r\n   };\r\n    showMessageOutput = (messageOutput) => {\r\n      console.log(\"Received message:\", messageOutput);\r\n\r\n      if (messageOutput && messageOutput.message && messageOutput.message.text) {\r\n        const { messages } = this.state;\r\n        this.state.from = messageOutput.message.from; // 檢查 messageOutput.message.from\r\n        console.log(\"check\"+this.state.from);\r\n        const updatedMessages = [...messages, messageOutput.message.text];\r\n        this.setState({ messages: updatedMessages });\r\n      } else {\r\n        console.log(\"Invalid message format:\", messageOutput);\r\n      }\r\n    };\r\n/*\r\n   showMessageOutput = (messageOutput) => {\r\n     const { messages } = this.state;\r\n     const updatedMessages = [...messages, messageOutput.message.text];\r\n\r\n     this.setState({ messages: updatedMessages });\r\n   };\r\n*/\r\n   handleMessageChange = (event) => {\r\n     this.setState({ newMessage: event.target.value });\r\n   };\r\n\r\n   render() {\r\n     const { messages, newMessage, connected } = this.state;\r\n     console.log(\"this.state.userName in render:\", this.state.userName);\r\n     const Message = ({ content, isSent }) => (\r\n       <div className={`message ${isSent ? 'sent' : 'received'}`}>\r\n         {content}\r\n       </div>\r\n     );\r\n\r\n     return (\r\n     <div className=\"Chatroom\">\r\n       <div className=\"chatroom-header\">\r\n         <h1>{this.state.apiRoomName}\r\n         <span className=\"user-online\">{this.state.userName} is online</span>\r\n         </h1>\r\n       </div>\r\n       <div className=\"chatroom-messages\" >\r\n         <div className=\"message-list\" >\r\n           <Message content=\"Hi!\" isSent={false} />\r\n           <Message content=\"嗨嗨\" isSent={false} />\r\n           {messages.map((message, index) => {\r\n               console.log(\"message:\", message);\r\n               console.log(\"from:\", this.state.from);\r\n               console.log(\"this.state.userName:\", this.state.userName);\r\n               return (\r\n                 <Message\r\n                   key={index}\r\n                   content={message}\r\n                   isSent={this.state.from === this.state.userName}\r\n                 />\r\n               );\r\n             })}\r\n             <div ref={this.messageListRef} />\r\n         </div>\r\n       </div>\r\n       <div className=\"chatroom-input\">\r\n         <div className=\"enter\">\r\n           <input\r\n             type=\"text\"\r\n             id=\"text\"\r\n             placeholder='輸入想說的話...'\r\n             value={newMessage}\r\n             onChange={this.handleMessageChange}\r\n           />\r\n           <button type=\"submit\" onClick={this.sendMessage} disabled={!connected}>Send</button>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     );\r\n   }\r\n }\r\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}