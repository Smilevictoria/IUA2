{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elain\\\\1112\\\\IUA2\\\\my-app\\\\src\\\\moodChatGPT.js\";\nimport './moodChatGPT.css';\nimport React from \"react\";\nimport back from './img/back.png';\nimport { Back } from './components/Style.js';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from './cookie';\n//test\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MoodChatGPT extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollToBottom = () => {\n      // Scroll to the bottom of the message list\n      if (this.messageListRef.current) {\n        this.messageListRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    };\n    this.handleMessageChange = event => {\n      this.setState({\n        newMessage: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        messages,\n        newMessage\n      } = this.state;\n      const userInfo = loginUser();\n      if (newMessage.trim() !== '') {\n        const userMessage = {\n          content: newMessage,\n          studentID: userInfo,\n          isSent: true\n        };\n        const typingMessage = {\n          content: '正在輸入中...',\n          isSent: false\n        };\n        console.log(userMessage);\n        const updatedMessages = [...messages, userMessage, typingMessage];\n        this.setState({\n          messages: updatedMessages,\n          newMessage: '',\n          isTyping: true\n        }, () => {\n          this.scrollToBottom();\n        });\n        try {\n          const response = await fetch('/chatGPT/chat', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userMessage)\n          });\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const responseData = await response.json();\n          const updatedMessagesWithResponse = [...updatedMessages];\n          updatedMessagesWithResponse.pop();\n          updatedMessagesWithResponse.push(responseData);\n          this.setState({\n            messages: updatedMessagesWithResponse,\n            isTyping: false\n          }, () => {\n            this.scrollToBottom();\n          });\n        } catch (error) {\n          console.error('There was a problem with the fetch operation:', error);\n        }\n      }\n    };\n    this.state = {\n      messages: [],\n      newMessage: '',\n      isTyping: false\n    };\n    this.messageListRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Check if new messages have been added\n    if (prevState.messages.length !== this.state.messages.length) {\n      this.scrollToBottom(); // Scroll to the bottom when new messages arrive\n    }\n  }\n\n  render() {\n    const {\n      messages,\n      newMessage,\n      isTyping\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/homePage\",\n          children: /*#__PURE__*/_jsxDEV(Back, {\n            src: back,\n            alt: \"\\u56DE\\u4E0A\\u4E00\\u9801\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u5FC3\\u60C5\\u6A39\\u6D1E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.isSent ? 'sent' : 'received'}`,\n            style: {\n              maxWidth: '70%'\n            },\n            children: message.isSent ? message.content : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"received\",\n              children: index === messages.length - 1 && isTyping ? '正在輸入中...' : message.choices && message.choices.length > 0 ? message.choices[0].message.content : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.messageListRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enter\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"text\",\n            placeholder: \"\\u8F38\\u5165\\u60F3\\u8AAA\\u7684\\u8A71...\",\n            value: newMessage,\n            onChange: this.handleMessageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MoodChatGPT;","map":{"version":3,"names":["React","back","Back","Link","loginUser","jsxDEV","_jsxDEV","MoodChatGPT","Component","constructor","props","scrollToBottom","messageListRef","current","scrollIntoView","behavior","handleMessageChange","event","setState","newMessage","target","value","handleSubmit","preventDefault","messages","state","userInfo","trim","userMessage","content","studentID","isSent","typingMessage","console","log","updatedMessages","isTyping","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","updatedMessagesWithResponse","pop","push","error","createRef","componentDidUpdate","prevProps","prevState","length","render","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","style","maxWidth","choices","ref","type","id","placeholder","onChange","onClick"],"sources":["C:/Users/elain/1112/IUA2/my-app/src/moodChatGPT.js"],"sourcesContent":["import './moodChatGPT.css';\r\nimport React from \"react\";\r\nimport back from './img/back.png';\r\nimport {Back} from './components/Style.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from './cookie';\r\n//test\r\nclass MoodChatGPT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '',\r\n      isTyping: false,\r\n    };\r\n\r\n    this.messageListRef = React.createRef();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    // Scroll to the bottom of the message list\r\n    if (this.messageListRef.current) {\r\n      this.messageListRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Check if new messages have been added\r\n    if (prevState.messages.length !== this.state.messages.length) {\r\n      this.scrollToBottom(); // Scroll to the bottom when new messages arrive\r\n    }\r\n  }\r\n\r\n  handleMessageChange = (event) => {\r\n    this.setState({ newMessage: event.target.value });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { messages, newMessage } = this.state;\r\n    const userInfo = loginUser();\r\n\r\n    if (newMessage.trim() !== '') {\r\n      const userMessage = {\r\n        content: newMessage,\r\n        studentID: userInfo,\r\n        isSent: true,\r\n      };\r\n\r\n      const typingMessage = {\r\n        content: '正在輸入中...',\r\n        isSent: false,\r\n      };\r\n      console.log(userMessage);\r\n      const updatedMessages = [...messages, userMessage, typingMessage];\r\n      this.setState({ messages: updatedMessages, newMessage: '', isTyping: true }, () => {\r\n        this.scrollToBottom();\r\n      });\r\n\r\n      try {\r\n        const response = await fetch('/chatGPT/chat', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(userMessage),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const responseData = await response.json();\r\n\r\n        const updatedMessagesWithResponse = [...updatedMessages];\r\n        updatedMessagesWithResponse.pop();\r\n        updatedMessagesWithResponse.push(responseData);\r\n\r\n        this.setState({ messages: updatedMessagesWithResponse, isTyping: false }, () => {\r\n          this.scrollToBottom();\r\n        });\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages, newMessage, isTyping } = this.state;\r\n\r\n    return (\r\n      <div className=\"Chatroom\">\r\n        <div className=\"chatroom-header\">\r\n          <Link to='/homePage'>\r\n            <Back src={back} alt=\"回上一頁\" />\r\n          </Link>\r\n          <h1>心情樹洞</h1>\r\n        </div>\r\n        <div className=\"chatroom-messages\" >\r\n          <div className=\"message-list\" >\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`message ${message.isSent ? 'sent' : 'received'}`}\r\n                style={{ maxWidth: '70%' }}\r\n              >\r\n                {message.isSent ? (\r\n                  message.content\r\n                ) : (\r\n                  <div className=\"received\">\r\n                    {(index === messages.length - 1 && isTyping) ? '正在輸入中...' :\r\n                      (message.choices && message.choices.length > 0\r\n                        ? message.choices[0].message.content\r\n                        : '')}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div ref={this.messageListRef} />\r\n          </div>\r\n        </div>\r\n        <div className=\"chatroom-input\">\r\n          <div className=\"enter\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"text\"\r\n              placeholder='輸入想說的話...'\r\n              value={newMessage}\r\n              onChange={this.handleMessageChange}\r\n            />\r\n            <button type=\"submit\" onClick={this.handleSubmit} >Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoodChatGPT;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}