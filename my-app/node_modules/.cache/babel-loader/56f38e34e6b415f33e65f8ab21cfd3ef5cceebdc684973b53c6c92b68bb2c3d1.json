{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a0966\\\\Desktop\\\\IUA2\\\\my-app\\\\src\\\\ChatRoomList.js\",\n  _s = $RefreshSig$();\nimport './ChatRoomList.css';\nimport React from 'react';\nimport { useEffect, useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoomList = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredChatRooms, setFilteredChatRooms] = useState([]);\n  const chatRooms = [{\n    id: 'R1',\n    name: 'room1'\n  }, {\n    id: 'R2',\n    name: 'room2'\n  }, {\n    id: 'R3',\n    name: '徵室友'\n  }, {\n    id: 'R4',\n    name: 'room4'\n  }];\n  var stompClient = null;\n  var socket = new SockJS('/chatroom');\n  stompClient = Stomp.over(socket);\n  console.log(\"Connected!!\");\n  // userName = document.getElementById('from').value;\n  // stompClient.connect({user:userName}, function(frame) {\n  // setConnected(true);\n\n  // stompClient.subscribe('/topic/'+ chatRoom.name, function(messageOutput) {\n  //     showMessageOutput(JSON.parse(messageOutput.body));\n  // });\n\n  // // 私人\n  // stompClient.subscribe('/user/subscribe', function(messageOutput) {\n  //     showMessageOutput(JSON.parse(messageOutput.body));\n  // });\n  // });\n\n  const handleSearch = event => {\n    const searchTerm = event.target.value;\n    setSearchTerm(searchTerm);\n    const filteredRooms = chatRooms.filter(room => room.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredChatRooms(filteredRooms);\n  };\n  const linkStyle = {\n    color: 'black',\n    textDecoration: 'none' // 去除底線\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatRoomList\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search chat rooms\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchTerm ? filteredChatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chatroom/${chatRoom.id}`,\n        style: linkStyle,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"link-text\",\n            children: chatRoom.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, chatRoom.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)) : chatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chatroom/${chatRoom.id}`,\n        style: linkStyle,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"link-text\",\n            children: chatRoom.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, chatRoom.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoomList, \"XfNfdzmvV9nPnA0rEeXGuJoleC0=\");\n_c = ChatRoomList;\nexport default ChatRoomList;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","SockJS","Stomp","jsxDEV","_jsxDEV","ChatRoomList","_s","searchTerm","setSearchTerm","filteredChatRooms","setFilteredChatRooms","chatRooms","id","name","stompClient","socket","over","console","log","handleSearch","event","target","value","filteredRooms","filter","room","toLowerCase","includes","linkStyle","color","textDecoration","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","chatRoom","to","style","_c","$RefreshReg$"],"sources":["C:/Users/a0966/Desktop/IUA2/my-app/src/ChatRoomList.js"],"sourcesContent":["import './ChatRoomList.css';\nimport React from 'react';\nimport { useEffect, useState, useRef,  } from \"react\";\nimport { Link } from 'react-router-dom';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\n\nconst ChatRoomList = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredChatRooms, setFilteredChatRooms] = useState([]);\n\n  const chatRooms = [\n    { id: 'R1', name: 'room1' },\n    { id: 'R2', name: 'room2' },\n    { id: 'R3', name: '徵室友' },\n    { id: 'R4', name: 'room4' },\n];\n  var stompClient = null;\n  var socket = new SockJS('/chatroom');\n            stompClient = Stomp.over(socket);\n            console.log(\"Connected!!\");\n            // userName = document.getElementById('from').value;\n            // stompClient.connect({user:userName}, function(frame) {\n                // setConnected(true);\n                \n\n                // stompClient.subscribe('/topic/'+ chatRoom.name, function(messageOutput) {\n                //     showMessageOutput(JSON.parse(messageOutput.body));\n                // });\n\n                // // 私人\n                // stompClient.subscribe('/user/subscribe', function(messageOutput) {\n                //     showMessageOutput(JSON.parse(messageOutput.body));\n                // });\n            // });\n  \n  const handleSearch = (event) => {\n    const searchTerm = event.target.value;\n    setSearchTerm(searchTerm);\n\n    const filteredRooms = chatRooms.filter((room) =>\n      room.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredChatRooms(filteredRooms);\n  };\n\n  const linkStyle = {\n    color: 'black', \n    textDecoration: 'none' // 去除底線\n  };\n\n  return (\n    <div className='ChatRoomList'>\n      <input\n        type=\"text\"\n        placeholder=\"Search chat rooms\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <ul>\n      {searchTerm\n          ? filteredChatRooms.map((chatRoom) => (\n            <Link to={`/chatroom/${chatRoom.id}`} style={linkStyle}  key={chatRoom.id}>\n              <li>\n                <span className=\"link-text\">{chatRoom.name}</span>\n              </li>\n            </Link>\n          ))\n          : chatRooms.map((chatRoom) => (\n            <Link to={`/chatroom/${chatRoom.id}`} style={linkStyle}  key={chatRoom.id}>\n              <li>\n                <span className=\"link-text\">{chatRoom.name}</span>\n              </li>\n            </Link>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChatRoomList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}